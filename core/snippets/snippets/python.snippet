language: python
---

name: talonAppDeclaration
phrase: module app
insertionScope: statement
-
mod.apps.$1 = r"""
$0
"""
---

name: talonModuleClass
phrase: module class
insertionScope: class | statement
-
@mod.action_class
class Actions:
    $0
---

name: talonContextMatch
phrase: context match
insertionScope: statement
-
ctx.matches = r"""
$0
"""
---

name: talonContextList
phrase: context list
insertionScope: statement
-
ctx.lists["user.$1"] = {
    $0
}
---

name: talonContextClass
phrase: context class
insertionScope: class | statement
-
@ctx.action_class("$1")
class $2Actions:
    $0
---

name: pythonDataClass
phrase: data class
insertionScope: class | statement
-
@dataclass
class $1:
    $0
---

name: pythonImportDataClass
phrase: import data class
insertionScope: statement
-
from dataclasses import dataclass
---

name: pythonDictString
phrase: dick string
insertionScope: statement
-
    "$1": "$2",
---

name: pythonFormattedDictString
phrase: form dick string
insertionScope: statement
-
    "$1": f"$2",
---

name: pythonPrintSuccess
phrase: print success
insertionScope: statement
-
    print(f"[+] $1\n")
---

name: pythonPrintSuccess
phrase: failure
insertionScope: statement
-
    print(f"[-] $1\n")
---

name: pythonArgParser
phrase: parse args
insertionScope: statement
-
    parser = argparse.ArgumentParser()
    parser.add_argument('--$1', dest='$2', action='$3', default=$4, help='$5')
    args = parser.parse_args()
$0
---

name: pythonAddParseArg
phrase: parts add arg
insertionScope: statement
-
parser.add_argument('--$1', dest='$2', action='$3', default=$4, help='$5')
$0
---

name: pythonDocParam
phrase: doxy param
insertionScope: statement
-
# :param $1: $2
# :ptype $3: $4
$0
---

name: pythonToString
phrase: to string
insertionScope: statement
-
.decode("utf-8")
---
