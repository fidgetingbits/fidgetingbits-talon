language: lua
---

name: luaDumpTable
phrase: dumpTable
insertionScope: statement
-
local function dump_table(o, depth)
    local seen_tables = {}
    local function dump(o, depth)
        depth = depth or 0
        if seen_tables[o] then
            return "{ DUPLICATE }"
        end
        seen_tables[o] = true
        if type(o) == "table" then
            local s = "{ \n"
            for k, v in pairs(o) do
                if type(k) ~= "number" then
                    k = '"' .. k .. '"'
                end
                s = s .. string.rep(" ", depth * 2) .. "[" .. k .. "] = " .. dump(v, depth + 1) .. ",\n"
            end
            return s .. string.rep(" ", depth * 2) .. "} "
        else
            return tostring(o)
        end
    end
    return dump(o, depth)
end
---

name: luaNewTable
phrase: table
insertionScope: statement
-
local $1 = {}
$0
---

name: luaNewIndexedTable
phrase: index table
insertionScope: statement
-
$0[i] = {}
---

name: luaNewDoubleIndexedTable
phrase: dub index table
insertionScope: statement
-
$0[i][j] = {}
---
